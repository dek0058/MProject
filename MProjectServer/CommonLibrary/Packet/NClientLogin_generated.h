// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_NCLIENTLOGIN_MPROJECT_PACKET_H_
#define FLATBUFFERS_GENERATED_NCLIENTLOGIN_MPROJECT_PACKET_H_

#include "flatbuffers/flatbuffers.h"

namespace MProject {
namespace Packet {

struct NC2S_UserLogin;
struct NC2S_UserLoginBuilder;

struct NS2C_UserLogin;
struct NS2C_UserLoginBuilder;

struct NC2S_UserLogout;
struct NC2S_UserLogoutBuilder;

struct NS2C_UserLogout;
struct NS2C_UserLogoutBuilder;

struct NC2S_JoinWorld;
struct NC2S_JoinWorldBuilder;

struct NS2C_JoinWorld;
struct NS2C_JoinWorldBuilder;

struct NC2S_LeftWorld;
struct NC2S_LeftWorldBuilder;

struct NS2C_LeftWorld;
struct NS2C_LeftWorldBuilder;

struct NC2S_UserLogin FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NC2S_UserLoginBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NC2S_UserLoginBuilder {
  typedef NC2S_UserLogin Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NC2S_UserLoginBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NC2S_UserLogin> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NC2S_UserLogin>(end);
    return o;
  }
};

inline flatbuffers::Offset<NC2S_UserLogin> CreateNC2S_UserLogin(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NC2S_UserLoginBuilder builder_(_fbb);
  return builder_.Finish();
}

struct NS2C_UserLogin FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NS2C_UserLoginBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_USER_KEY = 4
  };
  uint32_t user_key() const {
    return GetField<uint32_t>(VT_USER_KEY, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT_USER_KEY, 4) &&
           verifier.EndTable();
  }
};

struct NS2C_UserLoginBuilder {
  typedef NS2C_UserLogin Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_user_key(uint32_t user_key) {
    fbb_.AddElement<uint32_t>(NS2C_UserLogin::VT_USER_KEY, user_key, 0);
  }
  explicit NS2C_UserLoginBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NS2C_UserLogin> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NS2C_UserLogin>(end);
    return o;
  }
};

inline flatbuffers::Offset<NS2C_UserLogin> CreateNS2C_UserLogin(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t user_key = 0) {
  NS2C_UserLoginBuilder builder_(_fbb);
  builder_.add_user_key(user_key);
  return builder_.Finish();
}

struct NC2S_UserLogout FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NC2S_UserLogoutBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NC2S_UserLogoutBuilder {
  typedef NC2S_UserLogout Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NC2S_UserLogoutBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NC2S_UserLogout> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NC2S_UserLogout>(end);
    return o;
  }
};

inline flatbuffers::Offset<NC2S_UserLogout> CreateNC2S_UserLogout(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NC2S_UserLogoutBuilder builder_(_fbb);
  return builder_.Finish();
}

struct NS2C_UserLogout FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NS2C_UserLogoutBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NS2C_UserLogoutBuilder {
  typedef NS2C_UserLogout Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NS2C_UserLogoutBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NS2C_UserLogout> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NS2C_UserLogout>(end);
    return o;
  }
};

inline flatbuffers::Offset<NS2C_UserLogout> CreateNS2C_UserLogout(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NS2C_UserLogoutBuilder builder_(_fbb);
  return builder_.Finish();
}

struct NC2S_JoinWorld FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NC2S_JoinWorldBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NC2S_JoinWorldBuilder {
  typedef NC2S_JoinWorld Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NC2S_JoinWorldBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NC2S_JoinWorld> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NC2S_JoinWorld>(end);
    return o;
  }
};

inline flatbuffers::Offset<NC2S_JoinWorld> CreateNC2S_JoinWorld(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NC2S_JoinWorldBuilder builder_(_fbb);
  return builder_.Finish();
}

struct NS2C_JoinWorld FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NS2C_JoinWorldBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_WORLD_KEY = 4
  };
  uint32_t world_key() const {
    return GetField<uint32_t>(VT_WORLD_KEY, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT_WORLD_KEY, 4) &&
           verifier.EndTable();
  }
};

struct NS2C_JoinWorldBuilder {
  typedef NS2C_JoinWorld Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_world_key(uint32_t world_key) {
    fbb_.AddElement<uint32_t>(NS2C_JoinWorld::VT_WORLD_KEY, world_key, 0);
  }
  explicit NS2C_JoinWorldBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NS2C_JoinWorld> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NS2C_JoinWorld>(end);
    return o;
  }
};

inline flatbuffers::Offset<NS2C_JoinWorld> CreateNS2C_JoinWorld(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t world_key = 0) {
  NS2C_JoinWorldBuilder builder_(_fbb);
  builder_.add_world_key(world_key);
  return builder_.Finish();
}

struct NC2S_LeftWorld FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NC2S_LeftWorldBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NC2S_LeftWorldBuilder {
  typedef NC2S_LeftWorld Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NC2S_LeftWorldBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NC2S_LeftWorld> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NC2S_LeftWorld>(end);
    return o;
  }
};

inline flatbuffers::Offset<NC2S_LeftWorld> CreateNC2S_LeftWorld(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NC2S_LeftWorldBuilder builder_(_fbb);
  return builder_.Finish();
}

struct NS2C_LeftWorld FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NS2C_LeftWorldBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NS2C_LeftWorldBuilder {
  typedef NS2C_LeftWorld Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NS2C_LeftWorldBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NS2C_LeftWorld> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NS2C_LeftWorld>(end);
    return o;
  }
};

inline flatbuffers::Offset<NS2C_LeftWorld> CreateNS2C_LeftWorld(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NS2C_LeftWorldBuilder builder_(_fbb);
  return builder_.Finish();
}

}  // namespace Packet
}  // namespace MProject

#endif  // FLATBUFFERS_GENERATED_NCLIENTLOGIN_MPROJECT_PACKET_H_
