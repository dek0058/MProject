// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_NUSERLOGINPACKET_MPROJECT_PACKET_H_
#define FLATBUFFERS_GENERATED_NUSERLOGINPACKET_MPROJECT_PACKET_H_

#include "flatbuffers/flatbuffers.h"

namespace MProject {
namespace Packet {

struct NUserLoginPacket;
struct NUserLoginPacketBuilder;

struct NUserLoginPacket FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef NUserLoginPacketBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NUserLoginPacketBuilder {
  typedef NUserLoginPacket Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NUserLoginPacketBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<NUserLoginPacket> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<NUserLoginPacket>(end);
    return o;
  }
};

inline flatbuffers::Offset<NUserLoginPacket> CreateNUserLoginPacket(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NUserLoginPacketBuilder builder_(_fbb);
  return builder_.Finish();
}

inline const MProject::Packet::NUserLoginPacket *GetNUserLoginPacket(const void *buf) {
  return flatbuffers::GetRoot<MProject::Packet::NUserLoginPacket>(buf);
}

inline const MProject::Packet::NUserLoginPacket *GetSizePrefixedNUserLoginPacket(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<MProject::Packet::NUserLoginPacket>(buf);
}

inline bool VerifyNUserLoginPacketBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<MProject::Packet::NUserLoginPacket>(nullptr);
}

inline bool VerifySizePrefixedNUserLoginPacketBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<MProject::Packet::NUserLoginPacket>(nullptr);
}

inline void FinishNUserLoginPacketBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<MProject::Packet::NUserLoginPacket> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedNUserLoginPacketBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<MProject::Packet::NUserLoginPacket> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace Packet
}  // namespace MProject

#endif  // FLATBUFFERS_GENERATED_NUSERLOGINPACKET_MPROJECT_PACKET_H_
