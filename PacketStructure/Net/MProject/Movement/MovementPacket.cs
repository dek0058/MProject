// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MProject.Movement
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct MovementPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static MovementPacket GetRootAsMovementPacket(ByteBuffer _bb) { return GetRootAsMovementPacket(_bb, new MovementPacket()); }
  public static MovementPacket GetRootAsMovementPacket(ByteBuffer _bb, MovementPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MovementPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MProject.Core.Packet? Packet { get { int o = __p.__offset(4); return o != 0 ? (MProject.Core.Packet?)(new MProject.Core.Packet()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public int X { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Y { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Z { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static void StartMovementPacket(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddPacket(FlatBufferBuilder builder, Offset<MProject.Core.Packet> packetOffset) { builder.AddStruct(0, packetOffset.Value, 0); }
  public static void AddX(FlatBufferBuilder builder, int x) { builder.AddInt(1, x, 0); }
  public static void AddY(FlatBufferBuilder builder, int y) { builder.AddInt(2, y, 0); }
  public static void AddZ(FlatBufferBuilder builder, int z) { builder.AddInt(3, z, 0); }
  public static Offset<MProject.Movement.MovementPacket> EndMovementPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MProject.Movement.MovementPacket>(o);
  }
}


}
